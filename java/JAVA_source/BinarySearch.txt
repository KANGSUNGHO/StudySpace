package javabook;
// 이진 탐색 알고리즘
public class Tree {
	class Node{
		int data;
		Node left;
		Node right;
		public Node(int data) {
			this.data = data;
		}
		Node root;
		public void makeTree(int[] a) {
			root = makeTreeR(a,0,a.length - 1);
		}
		public Node makeTreeR(int[] a, int start, int end) {
			if(start > end) return null;
			int mid = (start + end) / 2;
			Node node = new Node(a[mid]);
			node.left = makeTreeR(a, start, mid -1);
			node.right = makeTreeR(a, mid + 1, end);
			return node;
		}
		public void searchBtree(Node n, int find) {
			if(find < n.data) {
				System.out.println("데이터가 " + n.data + "보다 작습니다");
				searchBtree(n.left,find);
			}
			else if(find > n.data) {
				System.out.println("데이터가 " + n.data + "보다 큽니다.");
				searchBtree(n.right, find);
			}
			else
				System.out.println("데이터가" + n.data + "와 같습니다.");
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] a = new int[10];
		for(int i = 0; i < a.length; i++) {
			a[i] = i;
	
		}
		Tree t = new Tree();
		t.makeTree(a);
		t.searchBtree(t.root, 2);

	}

}
